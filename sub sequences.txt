
<string> [<exp> : <exp>]
            n       n
          start    stop

////////////////////////////

word = 'Ahmed'
print word[3:6] # ed
print word[3:]  # ed
print word[:2]  # ed

////////////////////////////

s = 'audacity'
print 'U' + s[2:] # Udacity

////////////////////////////

s = 'Amer'
s[:] # Amer
s + s[0:-1+1] # '' empty
///////////////////////////

# Given the variables s and t defined as:
s = 'udacity'
t = 'bodacious'
# write Python code that prints out udacious
# without using any quote characters in
# your code.
print s[:3]+t[4:]
//////////////////////////
# Insert the proper slicing indices for the substring variable 
# so that the slice is a string that contains everything after "A NOUN". 
# For example, if we wanted to store everything after "went", the returned 
# string would be equal to sentence[11:].

sentence = "A NOUN went on a walk."
substring = sentence[6:]
print substring
///////////////////////////
# Use string slicing to store everything before "NOUN" in substring1,
# everything after "NOUN" and before "VERB" in substring2, and everything after "VERB" 
# in substring3.

sentence = "A NOUN went on a walk. It can VERB really fast."
substring1 = sentence[0:2]
substring2 = sentence[6:30]
substring3 = sentence[34:]
print substring1+ substring2+substring3
///////////////////////////
# Set noun_replacement and verb_replacement to your own noun and verb strings. 
# Then, concatenate the variables substring1-3, noun_replacement, and 
# verb_replacement and assign the result to the variable new_sentence so that 
# it's in the same order as the variable sentence.

sentence = "A NOUN went on a walk. It can VERB really fast."
substring1 = sentence[0:2]
substring2 = sentence[6:30]
substring3 = sentence[34:]

noun_replacement = "ali" # your noun here
verb_replacement = "like" # your verb here

new_sentence = substring1 + noun_replacement + substring2 + verb_replacement + substring3

# your code here


print new_sentence
//////////////////////////
# Mary is a world class spy with different aliases across the world.

# Mary is known as Randa in America. 
# But in Europe, her alias Randa has another alias known as Katie.
# In Asia, the alias Katie has another alias known as Salwa.
# In Australia, the alias Salwa is known as Kathleen.
# In South America, the alias Kathleen is known as the alias Gabriel.

# You're a spy yourself and you want to be able to print the real name associated with
# all of these alias names to keep track of Mary, but you only know that 
# gabriel = kathleen, and kathleen = salwa, etc..

# Your mission: knowing how each alias relates to each other, assign the variables 
# gabriel, kathleen, salwa, katie, and randa to each other so whenever we print any alias,
# the values for each alias will point to the string "Mary"

# NOTE: We can't simply assign all variables to "Mary".

mary = "Mary"
# Your code goes here
randa = mary
katie = randa
salwa = katie
kathleen = salwa

# In South America, the alias Kathleen is known as the alias Gabriel, this means that:
gabriel = kathleen

# Test to see if all of these variables will print out the string "Mary"
print gabriel
print kathleen
print salwa
print katie
print randa
print mary
/////////////////////////